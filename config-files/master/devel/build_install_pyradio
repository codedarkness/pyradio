#!/bin/bash
function help(){
if [[ $(uname -s) = "Darwin" ]] || [[ $(uname -s) = "darwin" ]]; then
    echo "Usage: $0 [2/-u]"
else
    echo "Usage: $0 [2/-u/--user]"
fi
echo "
Available options:
       2   build using python v. 2.x
      -u   uninstall pyradio
  --user   user install (in ~/.local)

If no option is used, will build using Python 3

Checking python availability:"

            for n in 2 3 "";do
                echo -n "  python${n}"
                [ -z "$n" ] && echo -n " "
                echo -n "   ...   "
                python${n} --version 2>/dev/null 1>&2 && {
                    python${n} --version
                } || echo not found
            done
            echo
}

function find_paths(){
local APATH
# Fix for MacOs Catalina python 3
if [[ $(uname -s) = "Darwin" ]] || [[ $(uname -s) = "darwin" ]]; then
    echo /usr/local/lib
fi
python devel/site.py 2>/dev/null
python2 devel/site.py 2>/dev/null
python3 devel/site.py 2>/dev/null
APATH=$(python -m site --user-site 2>/dev/null) && echo "$APATH"
APATH=$(python2 -m site --user-site 2>/dev/null) && echo "$APATH"
APATH=$(python3 -m site --user-site 2>/dev/null) && echo "$APATH"
}

function remove_paths(){
echo "Looking for python installed files..."
find_paths | sort -u > /tmp/pyradio-uninstall.$$
while read line;do
    [ -d "$line" ] && {
    sudo find "$line" -type d -name "pyradio*egg" >> /tmp/pyradio-delete.$$
    }
done < /tmp/pyradio-uninstall.$$
while read line;do
    [ -d "$line" ] && {
        echo -n "** Removing \"$(basename $line)\" ... "
        sudo rm -rf "$line"
        echo done
    }
done < /tmp/pyradio-delete.$$
rm -f /tmp/pyradio-uninstall.$$ /tmp/pyradio-delete.$$ 2>/dev/null
}

function uninstall(){
    local user
    user=$(which pyradio 2>/dev/null) || {
        echo "PyRadio is not installed..."
        exit
    }
    sudo echo 'Uninstalling PyRadio'
    user=$(which pyradio | grep '\.local')
    [ -z "$user" ] && {
        echo -n '** Removing executable ... '
        sudo rm -f `which pyradio` 2>/dev/null
        if [ -d /usr/share/doc/pyradio ];then
            sudo rm -rf /usr/share/doc/pyradio 2>/dev/null
        else
            sudo rm -rf /usr/local/share/doc/pyradio 2>/dev/null
        fi
        echo done
        echo -n '** Removing help files ... '
        sudo rm -f /usr/share/man/man1/pyradio.1.gz 2>/dev/null || sudo rm -f /usr/local/share/man/man1/pyradio.1.gz 2>/dev/null
        echo done
    } || {
        echo -n '** Removing executable ... '
        rm -f `which pyradio` 2>/dev/null
        echo done
        echo -n '** Removing help files ... '
        if [ -d ~/.local/share/doc/pyradio ];then
            rm -rf ~/.local/share/doc/pyradio 2>/dev/null
        else
            rm -rf ~/.local/local/share/doc/pyradio 2>/dev/null
        fi
        rm -f ~/.local/share/man/man1/pyradio.1.gz 2>/dev/null
        echo done
    }
#set -x
    remove_paths
    echo "PyRadio successfully uninstalled"
}

function create_bdist(){
    rm -rf build pyradio.egg-info dist debian 2>/dev/null
    python3 setup.py bdist || {
        echo "Error creating bdist"
        exit 1
    }

}

function get_cur_version(){
    cur_version=$(grep 'version_info = ' pyradio/__init__.py | sed 's/version_info = (//;s/, /./g;s/)//')
    cur_state=$(grep 'app_state = ' pyradio/__init__.py | sed "s/app_state = //;s/'//g")
    [[ -z "$cur_state" ]] || cur_version="$cur_version"-"$cur_state"
    #echo "$cur_version"
}

function do_debian(){
get_cur_version
outfile=pyradio-${cur_version}_all.deb
create_bdist
mkdir -p debian/DEBIAN
cat <<END >debian/DEBIAN/control
Source: pyradio
Version: |version|
Priority: optional
Build-Depends: debhelper-compat (= 9) python3-setuptools
Maintainer: Spiros Georgaras <sng@hellug.gr>
Package: pyradio
Section: Multimedia
Architecture: all
Description: Command line internet radio player

END


cd debian
tar xzf ../dist/*z
mkdir -p usr/local/share/doc
cp ../*md usr/local/share/doc
cp ../*html usr/local/share/doc
cp ../LICENCE usr/local/share/doc/copyright
mkdir -p usr/local/share/man/man1
cp ../pyradio.1 usr/local/share/man/man1/
gzip usr/local/share/man/man1/pyradio.1
sed -i "s/|version|/$cur_version/" DEBIAN/control
cd ..

dpkg-deb -b debian $outfile
# clean up
rm -rf build pyradio.egg-info dist debian 2>/dev/null
echo
echo "=============================================================================="
echo "File created: $outfile
You can install it by executing
    sudo dpkg -i ./$outfile
or
    sudo apt install ./$outfile
"
echo "=============================================================================="

}

TO_PYTHON=3
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        -h|--help)
            help
            exit
            ;;
        -d)
            do_debian
            exit
            ;;
        -u)
            uninstall
            exit
            ;;
        --user)
            TO_USER=1
            if [[ $(uname -s) = "Darwin" ]] || [[ $(uname -s) = "darwin" ]]; then
                echo "Parameter --user not supported on this OS"
                exit 1
            fi
            shift
            ;;
        2)
            TO_PYTHON=2
            shift
            ;;
        *)    # unknown option
            POSITIONAL+=("$1") # save it in an array for later
            shift # past argument
            ;;
    esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

## check dependencies :)
#for prog in git sed ;do
#    ${prog} --version 2>/dev/null 1>&2 || {
#        echo "Error: ${prog} not found."
#        echo "       Please install it and try again."
#        exit 1
#    }
#done

# check dependencies :)
for prog in git sed ;do
    ${prog} --version 2>/dev/null 1>&2 || {
        if [ "${prog}" = "sed" ];then
            sed 's/a/b/' LICENCE > /dev/null ||{
                echo "Error: ${prog} not found."
                echo "       Please install it and try again."
                exit 1
            }
        else
                echo "Error: ${prog} not found."
                echo "       Please install it and try again."
                exit 1
        fi
    }
done

# delete any files that were left from previous attempt
[ -z "$TO_USER" ] && {
    sudo find . -iname "*.pyc" -delete 2>/dev/null
    sudo find . -iname "*.egg" -delete 2>/dev/null
} || {
    find . -iname "*.pyc" -delete 2>/dev/null
    find . -iname "*.egg" -delete 2>/dev/null
}

# add git repo info to project
descr=$(git describe --long --tags 2>/dev/null || echo not_from_git)

[ -z "$descr" ] || {
    echo -n "s/git_description = ''/git_description = '" > sed.$$
    echo -n "${descr}" >> sed.$$
    echo "'/" >> sed.$$
    sed -f sed.$$ pyradio/radio.py > tmp-radio.py && mv -f tmp-radio.py pyradio/radio.py || {
        # failed... restore radio.py
        # and build without revision info
        git checkout pyradio/radio.py
        descr=''
    }
}
rm sed.$$ 2>/dev/null

# build and install project
python"${TO_PYTHON}" setup.py build && {
    [ -z "$TO_USER" ] && {
        echo "***** installing..."
        sudo python"${TO_PYTHON}" setup.py install && {
            gzip -k pyradio.1
            sudo mv -f pyradio.1.gz /usr/share/man/man1 2>/dev/null || sudo mv -f pyradio.1.gz /usr/local/share/man/man1
            DOC=/usr/share/doc/pyradio
            sudo mkdir "$DOC" 2>/dev/null
            if [ ! -d "$DOC" ];then
                # Mac OS SIP protects /usr
                DOC=/usr/local/share/doc/pyradio
                mkdir "$DOC"
            fi
            for n in README.* build.*
            do
                sudo cp "$n" "$DOC"
            done
            # copy LICENCE
            if [ "$DOC" = "/usr/share/doc/pyradio" ];then
                sudo mkdir -p /usr/share/licenses/pyradio 2>/dev/null
                sudo cp LICENCE /usr/share/licenses/pyradio
            else
                sudo cp LICENCE "$DOC"
            fi
        }
    } || {
        echo "***** installing for user..."
        python"${TO_PYTHON}" setup.py install --user | tee installed && {
            gzip -k pyradio.1
            mkdir -p ~/.local/share/man/man1 2>/dev/null
            mv -f pyradio.1.gz ~/.local/share/man/man1 2>/dev/null || mv -f pyradio.1.gz ~/.local/local/share/man/man1
            DOC=~/.local/share/doc/pyradio
            mkdir -p "$DOC" 2>/dev/null
            if [ ! -d "$DOC" ];then
                # Mac OS SIP protects /usr
                DOC=~/.local/local/share/doc/pyradio
                mkdir "$DOC"
            fi
            for n in README.* build.*
            do
                cp "$n" "$DOC"
            done
            # copy LICENCE
            mkdir -p ~/.local/share/licenses 2>/dev/null
            if [ "$DOC" = "~/.local/share/doc/pyradio" ];then
                mkdir -p ~/.local/share/licenses/pyradio 2>/dev/null
                cp LICENCE ~/.local/share/licenses/pyradio
            else
                cp LICENCE "$DOC"
            fi
        }
    }
}

# restore files to original state
[ -z "$descr" ] || {
    echo "s/git_description = '[^']*'/git_description = ''/" > sed.$$
    sed -f  sed.$$ pyradio/radio.py > tmp-radio.py
    mv -f tmp-radio.py pyradio/radio.py
    #git checkout pyradio/radio.py
}
rm sed.$$ 2>/dev/null

